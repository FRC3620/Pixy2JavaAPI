plugins {
    id "java"
    id "edu.wpi.first.GradleRIO" version "2019.4.1"
    id "maven-publish"
}

// Set this to true to enable desktop support.
def includeDesktopSupport = false

// Maven central needed for JUnit
repositories {
    mavenCentral()
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

// Defining my dependencies. In this case, WPILib (+ friends), and vendor libraries.
// Also defines JUnit 4.
dependencies {
    implementation wpi.deps.wpilib()
    implementation wpi.deps.vendor.java()
    testImplementation 'junit:junit:4.12'
}

ext {
    jarToPublish = file( 'pixy2-java-api.jar' )
}

jar {
	baseName 'pixy2-java-api'
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}
 
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
       	 	from components.java
        	artifact sourceJar
            artifact javadocJar
        	groupId = 'pw.otake.pseudoresonance'
            artifactId = 'pixy2-java-api'
            version = '1.3.4'
            pom {
                name = 'Pixy2JavaAPI'
                description = 'Java port of Pixy2 API for FIRST Robotics'
                url = 'https://github.com/PseudoResonance/Pixy2JavaAPI/'
                licenses {
                    license {
                        name = 'GNU General Public License, version 2'
                        url = 'http://www.gnu.org/licenses/gpl-2.0.html'
                    }
                }
                developers {
                    developer {
                        id = 'PseudoResonance'
                        name = 'Josh Otake'
                        email = 'kaio11602@gmail.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
       	 	def releasesRepoUrl = "http://192.168.1.15:8081/repository/maven-releases/"
            def snapshotsRepoUrl = "http://192.168.1.15:8081/repository/maven-snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = project.hasProperty('nexus_username') ? nexus_username : ''
                password = project.hasProperty('nexus_password') ? nexus_password : ''
            }
        }
    }
}